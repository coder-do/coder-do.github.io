{"version":3,"sources":["assets/img/burger-logo.png","hoc/hoc.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Logo/Logo.js","components/Navigation/Sidedrawer/Drawtoggle/Drawtoggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Sidedrawer/Sidedrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredinent/BurgerIngedinent.js","components/Burger/Burger.js","components/Burger/BurgerControls/BurgerControl/BurgerControl.js","components/Burger/BurgerControls/BurgerControls.js","components/UI/Modal/Modal.js","components/Burger/OrderSummary/OrderSummary.js","axios.js","components/UI/spinner/spinner.js","hoc/withError/withError.js","containers/BurgerBuilder/BurgerBuilder.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/FormInputs/FormInputs.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","hoc","props","children","NavigationItem","className","name","to","link","style","textAlign","exact","NavigationItems","Logo","height","src","logo","alt","Drawtoggle","onClick","clicked","cursor","Toolbar","drawerClicked","Backdrop","show","Sidedrawer","classes","open","closed","join","Layout","state","showDrawer","showDrawerHandler","setState","prevState","this","Component","BurgerIngedinent","ingredinent","type","Burger","transform","Object","keys","ingredinents","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","BurgerControl","label","disabled","removed","added","controls","BurgerControls","price","toFixed","ctrl","ingredinentAdded","ingredinentRemoved","purchasable","purchasing","Modal","nextProps","closedModal","opacity","continue","OrderSummary","order","it","textTransform","instance","axios","create","baseURL","spinner","withError","WrappedComponent","error","errorClose","req","interceptors","response","use","res","req1","request","eject","display","marginBottom","message","INGREDINENTS_PRICES","Salad","Meat","Bacon","Cheese","total","loading","removeIngredinentsHandler","updateCount","updatedIngredinents","newPrice","purchaseUpdate","addIngredinentsHandler","purchaseHandler","purchaseCloseHandler","purchaseContinue","params","push","encodeURIComponent","str","history","pathname","search","get","then","data","catch","sum","disabledBtn","orderSummary","burger","CheckoutSummary","width","margin","checkoutCanceled","checkoutContinued","FormInputs","inputEl","invalid","shouldValidate","touched","typee","onChange","changed","elemConfig","value","options","item","displayValue","ContactData","formData","elemType","placeholder","validation","required","minLength","maxLength","valid","street","country","email","isEmail","deliveryMethod","e","preventDefault","id","ingredients","customer","post","inputChanged","inputId","updatedForm","updatedEl","target","chechValidity","rules","isValid","trim","config","form","onSubmit","Checkout","checkoutCanceledHandler","goBack","checkoutContinuedHandler","URLSearchParams","location","entries","path","match","render","ingrName","amount","ingrOutput","border","padding","fetched","err","App","component","Orders","BurgerBuilder","Boolean","window","hostname","app","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.750779f4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","\r\nconst hoc = props => props.children\r\n\r\nexport default hoc;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './NavigationItem.sass';\r\n\r\n\r\nconst NavigationItem = (props) => {\r\n    return (\r\n        <li className='NavigationItem'>\r\n            {props.name ? <NavLink to={props.link} style={{textAlign: 'center'}}>{props.children}</NavLink> : \r\n            <NavLink exact to={props.link}>{props.children}</NavLink>}\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default NavigationItem;","import React from 'react';\r\nimport './NavigationItems.sass';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nconst NavigationItems = () => {\r\n    return (\r\n        <ul className='NavigationItems'>\r\n            <NavigationItem link='/'>Burger Builder</NavigationItem>\r\n            <NavigationItem link='/orders' name>Orders</NavigationItem>\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default NavigationItems;","import React from 'react';\r\nimport './Logo.sass';\r\n\r\nimport logo from '../../assets/img/burger-logo.png';\r\n\r\nconst Logo = (props) => {\r\n    return (\r\n        <div className='logo' style = {{height: props.height}}>\r\n            <img src={logo} alt='burger'/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './Drawtoggle.sass';\r\n\r\n\r\nconst Drawtoggle = props => (\r\n    <div onClick={props.clicked} style={{cursor: 'pointer'}} className='DrawerToggle'>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>    \r\n    </div>\r\n);\r\n\r\nexport default Drawtoggle;\r\n","import React from 'react';\r\nimport './Toolbar.sass';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\n\r\nimport Logo from '../../Logo/Logo';\r\nimport Drawtoggle from '../Sidedrawer/Drawtoggle/Drawtoggle';\r\n\r\nconst Toolbar = props => {\r\n    return (\r\n        <header className='toolbar'>\r\n            <Drawtoggle clicked={props.drawerClicked}/>\r\n            <Logo height='80%'/>\r\n\r\n            <nav className='desctop'>\r\n                <NavigationItems />\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Toolbar;","import React from 'react';\r\nimport './Backdrop.sass';\r\n\r\nconst Backdrop = props => {\r\n    return (\r\n        props.show ? <div className='backdrop' onClick={props.clicked}></div> : null\r\n    )\r\n}\r\n\r\nexport default Backdrop;","import React from 'react';\r\nimport './Sidedrawer.sass';\r\n\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport Hoc from '../../../hoc/hoc';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\n\r\nconst Sidedrawer = props => {\r\n    let classes = ['SideDrawer', 'Close'];\r\n\r\n    if(props.open) {\r\n        classes = ['SideDrawer', 'Open']\r\n    }\r\n    return (\r\n        <Hoc>\r\n            <Backdrop show={props.open} clicked={props.closed} />\r\n            <div className={classes.join(' ')}>\r\n                <span className='closed' onClick={props.closed}>&times;</span>\r\n                <Logo height='11%'/>\r\n                <nav>\r\n                    <NavigationItems />\r\n                </nav>\r\n            </div>\r\n        </Hoc>\r\n    );\r\n}\r\n\r\nexport default Sidedrawer;","import React, { Component } from 'react';\r\nimport Hoc from '../hoc';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/Sidedrawer/Sidedrawer';\r\n\r\nimport './Layout.sass';\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        showDrawer: false\r\n    }\r\n\r\n    showDrawerHandler = () => {\r\n        this.setState({showDrawer: false})\r\n    }\r\n\r\n    drawerClicked = () => {\r\n        this.setState((prevState) => {\r\n            return {showDrawer: !prevState.showDrawer}\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Hoc>\r\n                <Toolbar drawerClicked={this.drawerClicked}/>\r\n                <SideDrawer open={this.state.showDrawer} closed={this.showDrawerHandler}/>\r\n                <main className='layout'>\r\n                    {this.props.children}\r\n                </main>\r\n            </Hoc>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Layout;\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './BurgerIngredinent.sass';\r\n\r\nexport default class BurgerIngedinent extends Component {\r\n    render() {\r\n        let ingredinent = null;\r\n\r\n        switch(this.props.type) {\r\n            case('BreadBottom'):\r\n                ingredinent = <div className='BreadBottom'></div>; break;\r\n            case('BreadTop'):\r\n                ingredinent = (\r\n                    <div className='BreadTop'>\r\n                        <div className='Seeds1'></div>\r\n                        <div className='Seeds2'></div>\r\n                    </div>\r\n                ); break;\r\n            case('Meat'):\r\n                ingredinent = <div className='Meat'></div>; break;\r\n            case('Cheese'):\r\n                ingredinent = <div className='Cheese'></div>; break;\r\n            case('Salad'):\r\n                ingredinent = <div className='Salad'></div>; break;\r\n            case('Bacon'):\r\n                ingredinent = <div className='Bacon'></div>; break;\r\n            default:\r\n                ingredinent = null;\r\n        }\r\n        return ingredinent;\r\n    }\r\n}\r\n\r\nBurgerIngedinent.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n","import React from 'react';\r\nimport BurgerIngedinent from './BurgerIngredinent/BurgerIngedinent';\r\nimport './Burger.sass';\r\n\r\nconst Burger = (props) => {\r\n    let transform = Object.keys(props.ingredinents)\r\n          .map(igKey => {\r\n              return [...Array(props.ingredinents[igKey + 1])]\r\n                .map((_, i) => {\r\n                    return <BurgerIngedinent key={igKey + i} type={igKey} />\r\n                });\r\n          }).reduce((arr, el) => {\r\n              return arr.concat(el);\r\n          }, []);\r\n    if(transform.length === 0) {\r\n        transform = <p className='add'>Please add an ingredient</p>\r\n    }\r\n    return (\r\n        <div className='burger'>\r\n            <BurgerIngedinent type='BreadTop'/>\r\n                {transform}\r\n            <BurgerIngedinent type='BreadBottom'/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Burger;\r\n","import React from 'react';\r\nimport './BurgerControl.sass';\r\n\r\nconst BurgerControl = (props) => {\r\n    return (\r\n        <div className='BurgerControl'>\r\n            <div className='Label'> {props.label} </div>\r\n            <button disabled={props.disabled} className='Less' onClick={props.removed}>Less</button>\r\n            <button className='More' onClick={props.added}>More</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BurgerControl;","import React from 'react';\r\nimport BurgerControl from './BurgerControl/BurgerControl';\r\n\r\nimport './BurgerControls.sass';\r\n\r\n\r\nconst controls = [\r\n    { label: 'Salad', type: 'Salad' },\r\n    { label: 'Meat', type: 'Meat' },\r\n    { label: 'Bacon', type: 'Bacon' },\r\n    { label: 'Cheese', type: 'Cheese' }\r\n];\r\n\r\nconst BurgerControls = (props) => {\r\n    return (\r\n        <div className='BurgerControls'>\r\n            <p>Current price: <strong>{ props.price >= 0 ? props.price === 0 ? props.price.toFixed() : props.price.toFixed(2) : -props.price.toFixed(2)}  $</strong></p>\r\n            {\r\n                controls.map(ctrl => {\r\n                    return <BurgerControl \r\n                        key={ctrl.label} \r\n                        label={ctrl.label} \r\n                        added={() => props.ingredinentAdded(ctrl.type)}\r\n                        removed={() => props.ingredinentRemoved(ctrl.type)}\r\n                        disabled={props.disabled[ctrl.type]}\r\n                        />\r\n                })\r\n            }\r\n            <button \r\n                className='OrderButton' \r\n                disabled={!props.purchasable}\r\n                onClick={props.purchasing}>Order now</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BurgerControls;","import React, { Component } from 'react';\r\nimport './Modal.sass';\r\n\r\nimport Hoc from '../../../hoc/hoc';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nclass Modal extends Component {\r\n    shouldComponentUpdate(nextProps) {\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <Hoc>\r\n                <Backdrop show={this.props.show} clicked={this.props.closedModal}/>\r\n                <div className='Modal' style={{\r\n                    transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                    opacity: this.props.show ? '1' : '0'\r\n                }}>\r\n                    <span className='close' onClick={this.props.closedModal}>&times;</span>\r\n                    {this.props.children}\r\n                    <div className='btns'>\r\n                        <button className='btn cancel' onClick={this.props.closedModal}>Cancel</button>\r\n                        <button className='btn continue' onClick={this.props.continue}>Continue</button>\r\n                    </div>\r\n                </div>\r\n            </Hoc>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport './OrderSummary.sass'\r\n\r\nconst OrderSummary = props => {\r\n    const order = Object.keys(props.ingredinents)\r\n        .map((it, i) => {\r\n            return (\r\n                <li key={i}><span style={{textTransform: 'capitalize'}}>{it}</span> : {props.ingredinents[it]}</li>\r\n            )\r\n        })\r\n    return (\r\n        <div className='overlay'>\r\n            <h3>Your order</h3>\r\n            <p>Burger with folowing ingredinents</p>\r\n            <ul>\r\n                {order}\r\n            </ul>\r\n            <p><strong>Total Price: {props.price.toFixed(2)} $</strong></p>\r\n            <p>Continue to checkout?</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderSummary;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://burger-builder-9d1db.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import React from 'react';\n\nimport './spinner.css';\n\nconst spinner = () => (\n    <div className=\"lds-spinner\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n);\n\nexport default spinner;","import React, { Component } from 'react';\r\n\r\nimport Hoc from '../hoc';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport './withError.sass';\r\n\r\nconst withError = (WrappedComponent, axios) => {\r\n\r\n    return class extends Component {\r\n        state = {\r\n            error: null\r\n        }\r\n        componentDidMount() {\r\n            \r\n            this.req = axios.interceptors.response.use(res => {\r\n                this.setState({error: null});\r\n                return res;\r\n            })\r\n            this.res = axios.interceptors.response.use(req1 => req1, error => {\r\n                this.setState({error: error});\r\n            })\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            axios.interceptors.request.eject(this.req);\r\n            axios.interceptors.response.eject(this.res);\r\n            this.setState = () => {\r\n                return;\r\n            };\r\n        }\r\n\r\n        errorClose = () => {\r\n            this.setState({error: null});\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <Hoc>\r\n                    <Modal \r\n                        show={this.state.error}\r\n                        closedModal={this.errorClose}\r\n                        continue={this.errorClose}>\r\n                        <span className='error' style={{display: 'block', marginBottom: '20px'}}>{this.state.error ? this.state.error.message : null}</span>\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props} />\r\n                </Hoc>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default withError;","import React, { Component } from 'react';\r\nimport Hoc from '../../hoc/hoc';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BurgerControls from '../../components/Burger/BurgerControls/BurgerControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport axios from '../../axios';\r\nimport Spinner from '../../components/UI/spinner/spinner';\r\nimport withError from '../../hoc/withError/withError';\r\n\r\nimport './BurgerBuilder.sass';\r\n\r\nconst INGREDINENTS_PRICES = {\r\n    Salad: 0.5,\r\n    Meat: 0.6,\r\n    Bacon: 0.3,\r\n    Cheese: 0.2\r\n}\r\n\r\nclass BurgerBuilder extends Component {\r\n    state = {\r\n        ingredinents: null,\r\n        total: 0,\r\n        purchasable: false,\r\n        purchasing: false,\r\n        loading: false,\r\n        error: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('https://burger-builder-9d1db.firebaseio.com/ingredienrs.json')\r\n        .then(res => {\r\n                this.setState({ingredinents: res.data})\r\n        })\r\n        .catch(error => {\r\n                this.setState({error: true})\r\n        });\r\n    }\r\n\r\n    purchaseUpdate (ingredinents) {\r\n        const sum = Object.keys(ingredinents)\r\n            .map(el => {\r\n                return ingredinents[el]\r\n            })\r\n            .reduce((sum, el) => {\r\n                return sum + el;\r\n            }, 0);\r\n        this.setState({purchasable: sum > 0});\r\n    }\r\n\r\n    removeIngredinentsHandler = type => {\r\n        const oldCount = this.state.ingredinents[type];\r\n        const updateCount = oldCount - 1;\r\n        const updatedIngredinents = {\r\n            ...this.state.ingredinents\r\n        };\r\n        updatedIngredinents[type] = updateCount;\r\n        const newPrice = this.state.total - INGREDINENTS_PRICES[type];\r\n        this.setState({total: newPrice, ingredinents: updatedIngredinents});\r\n        this.purchaseUpdate(updatedIngredinents); \r\n    }\r\n\r\n    addIngredinentsHandler = type => {\r\n        const oldCount = this.state.ingredinents[type];\r\n        const updateCount = oldCount + 1;\r\n        const updatedIngredinents = {\r\n            ...this.state.ingredinents\r\n        };\r\n        updatedIngredinents[type] = updateCount;\r\n        const newPrice = this.state.total + INGREDINENTS_PRICES[type];\r\n        this.setState({total: newPrice, ingredinents: updatedIngredinents});\r\n        this.purchaseUpdate(updatedIngredinents);\r\n    }\r\n\r\n    purchaseHandler = () => {\r\n        this.setState({purchasing: true});\r\n    }\r\n\r\n    purchaseCloseHandler = () => {\r\n        this.setState({purchasing: false});\r\n    }\r\n\r\n    purchaseContinue = () => {\r\n        \r\n        const params = [];\r\n        for(let i in this.state.ingredinents) {\r\n            params.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredinents[i]));\r\n        };\r\n        params.push('price=' + this.state.total)\r\n        const str = params.join('&');\r\n        this.props.history.push({\r\n            pathname: '/checkout',\r\n            search: '?' + str\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const disabledBtn = {\r\n            ...this.state.ingredinents\r\n        }\r\n        for(let key in disabledBtn) {\r\n            disabledBtn[key] = disabledBtn[key] <= 0;\r\n        }\r\n\r\n        let orderSummary = null;\r\n        let burger = this.state.error ? <p>Ingredients can`t be loaded</p> : (\r\n                                                                                <div className='spinnner'>\r\n                                                                                    <Spinner />\r\n                                                                                </div>\r\n                                                                            );\r\n        if(this.state.ingredinents) {\r\n            burger = (\r\n                <Hoc>\r\n                    <Burger ingredinents={this.state.ingredinents}  />\r\n                    <BurgerControls \r\n                        ingredinentAdded={this.addIngredinentsHandler}\r\n                        ingredinentRemoved={this.removeIngredinentsHandler}\r\n                        disabled={disabledBtn}\r\n                        price={this.state.total}\r\n                        purchasing={this.purchaseHandler}\r\n                        purchasable={this.state.purchasable}\r\n                    />\r\n                </Hoc>\r\n            );\r\n            orderSummary = <OrderSummary ingredinents={this.state.ingredinents} price={this.state.total}/>;\r\n        }\r\n\r\n        if(this.state.loading) {\r\n            orderSummary = <Spinner />\r\n        }\r\n\r\n        return (\r\n            <Hoc>\r\n                <Modal show={this.state.purchasing} \r\n                        closedModal={this.purchaseCloseHandler} \r\n                        continue={this.purchaseContinue}>\r\n                        {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </Hoc>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withError(BurgerBuilder, axios);\r\n","import React from 'react';\r\nimport Burger from '../../Burger/Burger';\r\nimport './CheckoutSummary.sass';\r\n\r\nconst CheckoutSummary = props => {\r\n    return (\r\n        <div className='CheckoutSummary'>\r\n            <h1 style={{textAlign: 'center'}}>We hope it tastes well!</h1>\r\n            <div style={{width: '300px', height: '300px', margin: 'auto'}}>\r\n                <Burger ingredinents={props.ingredinents} />\r\n            </div>\r\n            <div className='media'>\r\n                <button className='btnss cancel' onClick={props.checkoutCanceled}>Cancel</button>\r\n                <button className='btnss continue' onClick={props.checkoutContinued}>Continue</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckoutSummary;\r\n","import React from 'react';\r\nimport './FormInputs.sass';\r\n\r\nconst FormInputs = props => {\r\n    let inputEl = null;\r\n    const classes = ['InputElement'];\r\n    if(props.invalid && props.shouldValidate && props.touched) {\r\n        classes.push('Invalid');\r\n    }\r\n\r\n    switch(props.typee) {\r\n        case ('input'):\r\n            inputEl = <input className={classes.join(' ')} onChange={props.changed} {...props.elemConfig} value={props.value}/>;\r\n            break;\r\n        case ('textarea'):\r\n            inputEl = <textarea className={classes.join(' ')} onChange={props.changed} {...props.elemConfig} value={props.value}/>;\r\n            break;\r\n        case ('select'):\r\n            inputEl = (<select \r\n                            className={classes.join(' ')}\r\n                            value={props.value} onChange={props.changed}>\r\n                            {props.elemConfig.options.map(item => (\r\n                                <option key={item.value} value={item.value}>\r\n                                    {item.displayValue}\r\n                                </option>\r\n                            ))}\r\n                        </select>);\r\n            break;\r\n        default:\r\n            inputEl = <input onChange={props.changed} className={classes.join(' ')} {...props.elemConfig} value={props.value}/>;\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <div className='Input'>\r\n            <label className='Label'>{props.label}</label>\r\n            {inputEl}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormInputs;","import React, { Component } from 'react';\r\nimport axios from '../../../axios';\r\nimport Spinner from '../../../components/UI/spinner/spinner';\r\nimport Input from '../../../components/UI/FormInputs/FormInputs';\r\nimport './ContactData.sass';\r\n\r\nexport default class ContactData extends Component {\r\n    state = {\r\n        formData: {\r\n            name: {\r\n                elemType: 'input',\r\n                elemConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 3,\r\n                    maxLength: 3,\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            street: {\r\n                elemType: 'input',\r\n                elemConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Streer'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 3,\r\n                    maxLength: 3,\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            country: {\r\n                elemType: 'input',\r\n                elemConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your country'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 3,\r\n                    maxLength: 3,\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            email: {\r\n                elemType: 'input',\r\n                elemConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Your Mail'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    isEmail: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            deliveryMethod: {\r\n                elemType: 'select',\r\n                elemConfig: {\r\n                    options: [\r\n                        {value: 'fastest', displayValue: 'Fastest'},\r\n                        {value: 'cheapest', displayValue: 'Cheapest'}\r\n                ]\r\n                },\r\n                validation: {},\r\n                valid: true,\r\n                value: '',\r\n            },\r\n        },\r\n        loading: false\r\n    };\r\n    clicked = (e) => {\r\n        e.preventDefault();\r\n        this.setState({loading: true});\r\n        const data = {};\r\n        for (let id in this.state.formData) {\r\n            data[id] = this.state.formData[id].value;\r\n        }\r\n        const price = this.props.price + ' $';\r\n        delete this.props.ingredients['price'];\r\n        const order = {\r\n            price: price,\r\n            ingredinents: {\r\n                ...this.props.ingredients\r\n            },\r\n            customer: data\r\n        }\r\n        axios.post('/orders.json', order)\r\n                .then(res => {this.setState({loading: false}); this.props.history.push('/');})\r\n                .catch(error => this.setState({loading: false}));\r\n    }\r\n\r\n    inputChanged = (e, inputId) => {\r\n        const updatedForm = {...this.state.formData};\r\n        const updatedEl = {\r\n            ...updatedForm[inputId]\r\n        };\r\n        updatedEl.value = e.target.value;\r\n        updatedEl.valid = this.chechValidity(updatedEl.value, updatedEl.validation);\r\n        updatedEl.touched = true;\r\n        updatedForm[inputId] = updatedEl;\r\n        this.setState({formData: updatedForm});\r\n    }\r\n\r\n    chechValidity(value, rules) {\r\n        let isValid = true;\r\n        \r\n        if (!rules) {\r\n            return true;\r\n        }\r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n        if (rules.minLength) {\r\n            isValid = !(value.length >= rules.minLength)\r\n        }\r\n        if (rules.maxLength) {\r\n            isValid = !(value.length <= rules.maxLength)\r\n        }\r\n        // if (rules.isEmail) {\r\n        //     const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n        //     isValid = pattern.test(value) && isValid\r\n        // }\r\n        // if (rules.isNumeric) {\r\n        //     const pattern = /^\\d+$/;\r\n        //     isValid = pattern.test(value) && isValid\r\n        // }\r\n        return isValid;\r\n    }\r\n\r\n    render() {\r\n        const arr = [];\r\n        for(let key in this.state.formData) {\r\n            arr.push({\r\n                id: key,\r\n                config: this.state.formData[key]\r\n            })\r\n        }\r\n        let form = (\r\n            <form onSubmit={this.clicked}>\r\n                {arr.map(it => (\r\n                    <Input key={it.id} typee={it.config.elemType} elemType={it.config.elemType} \r\n                        elemConfig={it.config.elemConfig} value={it.config.value}\r\n                        invalid={!it.config.valid} shouldValidate={it.config.validation}\r\n                        touched={it.config.touched}\r\n                        changed={(e) => this.inputChanged(e, it.id)} />\r\n                ))}\r\n                <div>\r\n                    <button className='btnss continuee'>ORDER</button>\r\n                </div>\r\n            </form>\r\n        );\r\n        if(this.state.loading) {\r\n            return (\r\n                <div className='ContactData'>\r\n                    <Spinner />\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div className='ContactData'>\r\n                <h3>Enter your contact data:</h3>\r\n                {form}\r\n            </div>\r\n        )\r\n    } \r\n}\r\n","import React, { Component } from 'react'\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport { Route } from 'react-router-dom';\r\nimport ContactData from './ContactData/ContactData';\r\n\r\nexport default class Checkout extends Component {\r\n    state = {\r\n        ingredinents: {},\r\n        price: 0\r\n    }\r\n    componentWillMount() {\r\n        const params = new URLSearchParams(this.props.location.search);\r\n        const ingredients = {};\r\n        let price = 0;\r\n        for(let i of params.entries()) {\r\n            if(params[0] === 'price') {\r\n                price = params[1];\r\n            }\r\n            else {\r\n                ingredients[i[0]] = +i[1];\r\n            }\r\n        };\r\n        this.setState({ingredinents: ingredients, price: price});\r\n    }\r\n    checkoutCanceledHandler = () => {\r\n        this.props.history.goBack();\r\n    }\r\n    checkoutContinuedHandler = () => {\r\n        this.props.history.push('/checkout/form-data');\r\n    }\r\n    render() {\r\n        let price = this.state.ingredinents.price;\r\n        return (\r\n            <div>\r\n                <CheckoutSummary \r\n                    ingredinents={this.state.ingredinents}\r\n                    checkoutCanceled={this.checkoutCanceledHandler}\r\n                    checkoutContinued={this.checkoutContinuedHandler} />\r\n                <Route path={this.props.match.path + '/form-data'} exact render={(props) => \r\n                    (<ContactData ingredients={this.state.ingredinents} price={price} {...props} />)} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './Order.sass';\r\n\r\nconst order = props => {\r\n    const ingredients = [];\r\n    for(let ingrName in props.ingredients) {\r\n        ingredients.push({\r\n            name: ingrName,\r\n            amount: props.ingredients[ingrName]\r\n        })\r\n    }\r\n\r\n    const ingrOutput = ingredients.map(it => (\r\n        <span key={it.name}\r\n            style={{\r\n                textTransform: 'capitalize',\r\n                display: 'inline-block',\r\n                margin: '5px 4px',\r\n                border: '1px solid #ccc',\r\n                padding: '5px'\r\n            }}>{it.name} ({it.amount})</span>\r\n    ))\r\n    return (\r\n        <div className='Order'>\r\n            <p><span className='orders'>Ingredients:</span> {ingrOutput}</p>\r\n            <p>Total Price:  <strong>{props.price}</strong></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default order","import React, { Component } from 'react';\r\nimport axios from '../../axios';\r\nimport Order from '../../components/Order/Order';\r\nimport withError from '../../hoc/withError/withError';\r\n\r\nclass Orders extends Component {\r\n    state = {\r\n        order: [],\r\n        loading: true\r\n    }\r\n    componentDidMount() {\r\n        axios.get('/orders.json')\r\n            .then(res => {\r\n                const fetched = [];\r\n                for(let key in res.data) {\r\n                    fetched.push({\r\n                        ...res.data[key],\r\n                        id: key\r\n                    });\r\n                }\r\n                this.setState({loading: false, order: fetched})\r\n            })\r\n            .catch(err => this.setState({loading: false}));\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.order.map(it => (\r\n                    <Order key={it.id} ingredients={it.ingredinents} price={it.price} />\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withError(Orders, axios);","import React from 'react';\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Orders from './containers/Orders/Orders';\n\nfunction App() {\n\treturn (\n\t\t<Router>\n            <Layout>\n                <Switch>\n                    <Route path='/checkout' component={Checkout} />\n                    <Route path='/orders' component={Orders} />\n                    <Route path='/' exact component={BurgerBuilder} />\n                </Switch>\n            </Layout>\n        </Router>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nconst app = (\n    <Router>\n        <App />\n    </Router>\n);\n \nReactDOM.render(app, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}