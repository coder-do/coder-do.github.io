{"version":3,"sources":["assets/img/burger-logo.png","hoc/hoc.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Logo/Logo.js","components/Navigation/Sidedrawer/Drawtoggle/Drawtoggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Sidedrawer/Sidedrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredinent/BurgerIngedinent.js","components/Burger/Burger.js","components/Burger/BurgerControls/BurgerControl/BurgerControl.js","components/Burger/BurgerControls/BurgerControls.js","components/UI/Modal/Modal.js","components/Burger/OrderSummary/OrderSummary.js","containers/BurgerBuilder/BurgerBuilder.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","hoc","props","children","NavigationItem","className","href","link","active","NavigationItems","Logo","style","height","src","logo","alt","Drawtoggle","onClick","clicked","cursor","Toolbar","drawerClicked","Backdrop","show","Sidedrawer","classes","open","closed","join","Layout","state","showDrawer","showDrawerHandler","setState","prevState","this","Component","BurgerIngedinent","ingredinent","type","Burger","transform","Object","keys","ingredinents","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","BurgerControl","label","disabled","removed","added","controls","BurgerControls","price","toFixed","ctrl","ingredinentAdded","ingredinentRemoved","purchasable","purchasing","Modal","nextProps","closedModal","opacity","alert","OrderSummary","order","it","textTransform","INGREDINENTS_PRICES","Salad","Meat","Bacon","Cheese","BurgerBuilder","total","removeIngredinentsHandler","updateCount","updatedIngredinents","newPrice","purchaseUpdate","addIngredinentsHandler","purchaseHandler","purchaseCloseHandler","sum","disabledBtn","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b50da19e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","\r\nconst hoc = props => props.children\r\n\r\nexport default hoc;","import React from 'react';\r\nimport './NavigationItem.sass';\r\n\r\nconst NavigationItem = (props) => {\r\n    return (\r\n        <li className='NavigationItem'>\r\n            <a href={props.link} className={props.active ? 'active' : null}>{props.children}</a>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default NavigationItem;","import React from 'react';\r\nimport './NavigationItems.sass';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nconst NavigationItems = () => {\r\n    return (\r\n        <ul className='NavigationItems'>\r\n            <NavigationItem link='/' active>Burger Builder</NavigationItem>\r\n            <NavigationItem link='/'>Checkout</NavigationItem>\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default NavigationItems;","import React from 'react';\r\nimport './Logo.sass';\r\n\r\nimport logo from '../../assets/img/burger-logo.png';\r\n\r\nconst Logo = (props) => {\r\n    return (\r\n        <div className='logo' style = {{height: props.height}}>\r\n            <img src={logo} alt='burger'/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './Drawtoggle.sass';\r\n\r\n\r\nconst Drawtoggle = props => (\r\n    <div onClick={props.clicked} style={{cursor: 'pointer'}} className='DrawerToggle'>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>    \r\n    </div>\r\n);\r\n\r\nexport default Drawtoggle;\r\n","import React from 'react';\r\nimport './Toolbar.sass';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\n\r\nimport Logo from '../../Logo/Logo';\r\nimport Drawtoggle from '../Sidedrawer/Drawtoggle/Drawtoggle';\r\n\r\nconst Toolbar = props => {\r\n    return (\r\n        <header className='toolbar'>\r\n            <Drawtoggle clicked={props.drawerClicked}/>\r\n            <Logo height='80%'/>\r\n\r\n            <nav className='desctop'>\r\n                <NavigationItems />\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Toolbar;","import React from 'react';\r\nimport './Backdrop.sass';\r\n\r\nconst Backdrop = props => {\r\n    return (\r\n        props.show ? <div className='backdrop' onClick={props.clicked}></div> : null\r\n    )\r\n}\r\n\r\nexport default Backdrop;","import React from 'react';\r\nimport './Sidedrawer.sass';\r\n\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport Hoc from '../../../hoc/hoc';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\n\r\nconst Sidedrawer = props => {\r\n    let classes = ['SideDrawer', 'Close'];\r\n\r\n    if(props.open) {\r\n        classes = ['SideDrawer', 'Open']\r\n    }\r\n    return (\r\n        <Hoc>\r\n            <Backdrop show={props.open} clicked={props.closed} />\r\n            <div className={classes.join(' ')}>\r\n                <span className='closed' onClick={props.closed}>&times;</span>\r\n                <Logo height='11%'/>\r\n                <nav>\r\n                    <NavigationItems />\r\n                </nav>\r\n            </div>\r\n        </Hoc>\r\n    );\r\n}\r\n\r\nexport default Sidedrawer;","import React, { Component } from 'react';\r\nimport Hoc from '../hoc';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/Sidedrawer/Sidedrawer';\r\n\r\nimport './Layout.sass';\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        showDrawer: false\r\n    }\r\n\r\n    showDrawerHandler = () => {\r\n        this.setState({showDrawer: false})\r\n    }\r\n\r\n    drawerClicked = () => {\r\n        this.setState((prevState) => {\r\n            return {showDrawer: !prevState.showDrawer}\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Hoc>\r\n                <Toolbar drawerClicked={this.drawerClicked}/>\r\n                <SideDrawer open={this.state.showDrawer} closed={this.showDrawerHandler}/>\r\n                <main className='layout'>\r\n                    {this.props.children}\r\n                </main>\r\n            </Hoc>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Layout;\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './BurgerIngredinent.sass';\r\n\r\nexport default class BurgerIngedinent extends Component {\r\n    render() {\r\n        let ingredinent = null;\r\n\r\n        switch(this.props.type) {\r\n            case('BreadBottom'):\r\n                ingredinent = <div className='BreadBottom'></div>; break;\r\n            case('BreadTop'):\r\n                ingredinent = (\r\n                    <div className='BreadTop'>\r\n                        <div className='Seeds1'></div>\r\n                        <div className='Seeds2'></div>\r\n                    </div>\r\n                ); break;\r\n            case('Meat'):\r\n                ingredinent = <div className='Meat'></div>; break;\r\n            case('Cheese'):\r\n                ingredinent = <div className='Cheese'></div>; break;\r\n            case('Salad'):\r\n                ingredinent = <div className='Salad'></div>; break;\r\n            case('Bacon'):\r\n                ingredinent = <div className='Bacon'></div>; break;\r\n            default:\r\n                ingredinent = null;\r\n        }\r\n        return ingredinent;\r\n    }\r\n}\r\n\r\nBurgerIngedinent.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n","import React from 'react';\r\nimport BurgerIngedinent from './BurgerIngredinent/BurgerIngedinent';\r\nimport './Burger.sass';\r\n\r\nconst Burger = (props) => {\r\n    let transform = Object.keys(props.ingredinents)\r\n          .map(igKey => {\r\n              return [...Array(props.ingredinents[igKey])]\r\n                .map((_, i) => {\r\n                    return <BurgerIngedinent key={igKey + i} type={igKey} />\r\n                });\r\n          }).reduce((arr, el) => {\r\n              return arr.concat(el);\r\n          }, []);\r\n    if(transform.length === 0) {\r\n        transform = <p className='add'>Please add an ingredient</p>\r\n    }\r\n    return (\r\n        <div className='burger'>\r\n            <BurgerIngedinent type='BreadTop'/>\r\n                {transform}\r\n            <BurgerIngedinent type='BreadBottom'/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Burger;\r\n","import React from 'react';\r\nimport './BurgerControl.sass';\r\n\r\nconst BurgerControl = (props) => {\r\n    return (\r\n        <div className='BurgerControl'>\r\n            <div className='Label'> {props.label} </div>\r\n            <button disabled={props.disabled} className='Less' onClick={props.removed}>Less</button>\r\n            <button className='More' onClick={props.added}>More</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BurgerControl;","import React from 'react';\r\nimport BurgerControl from './BurgerControl/BurgerControl';\r\n\r\nimport './BurgerControls.sass';\r\n\r\n\r\nconst controls = [\r\n    { label: 'Salad', type: 'Salad' },\r\n    { label: 'Meat', type: 'Meat' },\r\n    { label: 'Bacon', type: 'Bacon' },\r\n    { label: 'Cheese', type: 'Cheese' }\r\n];\r\n\r\nconst BurgerControls = (props) => {\r\n    return (\r\n        <div className='BurgerControls'>\r\n            <p>Current price: <strong>{ props.price >= 0 ? props.price === 0 ? props.price.toFixed() : props.price.toFixed(2) : -props.price.toFixed(2)}  $</strong></p>\r\n            {\r\n                controls.map(ctrl => {\r\n                    return <BurgerControl \r\n                        key={ctrl.label} \r\n                        label={ctrl.label} \r\n                        added={() => props.ingredinentAdded(ctrl.type)}\r\n                        removed={() => props.ingredinentRemoved(ctrl.type)}\r\n                        disabled={props.disabled[ctrl.type]}\r\n                        />\r\n                })\r\n            }\r\n            <button \r\n                className='OrderButton' \r\n                disabled={!props.purchasable}\r\n                onClick={props.purchasing}>Order now</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BurgerControls;","import React, { Component } from 'react';\r\nimport './Modal.sass';\r\n\r\nimport Hoc from '../../../hoc/hoc';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nclass Modal extends Component {\r\n    shouldComponentUpdate(nextProps) {\r\n        return nextProps.show !== this.props.show;\r\n    }\r\n    render() {\r\n        return (\r\n            <Hoc>\r\n                <Backdrop show={this.props.show} clicked={this.props.closedModal}/>\r\n                <div className='Modal' style={{\r\n                    transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                    opacity: this.props.show ? '1' : '0'\r\n                }}>\r\n                    <span className='close' onClick={this.props.closedModal}>&times;</span>\r\n                    {this.props.children}\r\n                    <div className='btns'>\r\n                        <button className='btn cancel' onClick={this.props.closedModal}>Cancel</button>\r\n                        <button className='btn continue' onClick={() => alert('You continued')}>Continue</button>\r\n                    </div>\r\n                </div>\r\n            </Hoc>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport './OrderSummary.sass'\r\n\r\nconst OrderSummary = props => {\r\n    const order = Object.keys(props.ingredinents)\r\n        .map((it, i) => {\r\n            return (\r\n                <li key={i}><span style={{textTransform: 'capitalize'}}>{it}</span> : {props.ingredinents[it]}</li>\r\n            )\r\n        })\r\n    return (\r\n        <div className='overlay'>\r\n            <h3>Your order</h3>\r\n            <p>Burger with folowing ingredinents</p>\r\n            <ul>\r\n                {order}\r\n            </ul>\r\n            <p><strong>Total Price: {props.price} $</strong></p>\r\n            <p>Continue to checkout?</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderSummary;","import React, { Component } from 'react';\r\nimport Hoc from '../../hoc/hoc';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BurgerControls from '../../components/Burger/BurgerControls/BurgerControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\n\r\nconst INGREDINENTS_PRICES = {\r\n    Salad: 0.5,\r\n    Meat: 0.6,\r\n    Bacon: 0.3,\r\n    Cheese: 0.2\r\n}\r\n\r\nclass BurgerBuilder extends Component {\r\n    state = {\r\n        ingredinents: {\r\n            Salad: 0,\r\n            Meat: 0,\r\n            Cheese: 0,\r\n            Bacon: 0\r\n        },\r\n        total: 0,\r\n        purchasable: false,\r\n        purchasing: false\r\n    }\r\n\r\n    purchaseUpdate (ingredinents) {\r\n        const sum = Object.keys(ingredinents)\r\n            .map(el => {\r\n                return ingredinents[el]\r\n            })\r\n            .reduce((sum, el) => {\r\n                return sum + el;\r\n            }, 0);\r\n        this.setState({purchasable: sum > 0});\r\n    }\r\n\r\n    removeIngredinentsHandler = type => {\r\n        const oldCount = this.state.ingredinents[type];\r\n        const updateCount = oldCount - 1;\r\n        const updatedIngredinents = {\r\n            ...this.state.ingredinents\r\n        };\r\n        updatedIngredinents[type] = updateCount;\r\n        const newPrice = this.state.total - INGREDINENTS_PRICES[type];\r\n        this.setState({total: newPrice, ingredinents: updatedIngredinents});\r\n        this.purchaseUpdate(updatedIngredinents); \r\n    }\r\n\r\n    addIngredinentsHandler = type => {\r\n        const oldCount = this.state.ingredinents[type];\r\n        const updateCount = oldCount + 1;\r\n        const updatedIngredinents = {\r\n            ...this.state.ingredinents\r\n        };\r\n        updatedIngredinents[type] = updateCount;\r\n        const newPrice = this.state.total + INGREDINENTS_PRICES[type];\r\n        this.setState({total: newPrice, ingredinents: updatedIngredinents});\r\n        this.purchaseUpdate(updatedIngredinents);\r\n    }\r\n\r\n    purchaseHandler = () => {\r\n        this.setState({purchasing: true});\r\n    }\r\n\r\n    purchaseCloseHandler = () => {\r\n        this.setState({purchasing: false});\r\n    }\r\n\r\n    render() {\r\n        const disabledBtn = {\r\n            ...this.state.ingredinents\r\n        }\r\n        for(let key in disabledBtn) {\r\n            disabledBtn[key] = disabledBtn[key] <= 0;\r\n        }\r\n        return (\r\n            <Hoc>\r\n                <Modal show={this.state.purchasing} closedModal={this.purchaseCloseHandler}>\r\n                    <OrderSummary ingredinents={this.state.ingredinents} price={this.state.total}/>\r\n                </Modal>\r\n                <Burger ingredinents={this.state.ingredinents} />\r\n                <BurgerControls \r\n                    ingredinentAdded={this.addIngredinentsHandler}\r\n                    ingredinentRemoved={this.removeIngredinentsHandler}\r\n                    disabled={disabledBtn}\r\n                    price={this.state.total}\r\n                    purchasing={this.purchaseHandler}\r\n                    purchasable={this.state.purchasable}\r\n                />\r\n            </Hoc>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BurgerBuilder;","import React from 'react';\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\n\nfunction App() {\n\treturn (\n\t\t<Layout>\n\t\t\t<BurgerBuilder />\n\t\t</Layout>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( <App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}
